font pango:RobotoMono Nerd Font 11

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

set $term footclient

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec footclient

# kill focused window
bindsym $mod+Shift+q kill

# start wofi (a program launcher)
bindsym $mod+d exec rofi -show combi -combi-modes drun#run -modes combi

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

workspace 1  output DP-2 
workspace 2  output DP-2 
workspace 3  output DP-2 
workspace 4  output DP-2 
workspace 5  output DP-2 
workspace 6  output DP-2 
workspace 7  output DP-2 
workspace 8  output DP-2 
workspace 9  output DP-1  
workspace 10 output DP-1 


bindsym --no-repeat $mod+1 workspace number $ws1; exec "echo 1 > ${SOVPIPE}"  
bindsym --no-repeat $mod+2 workspace number $ws2; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+3 workspace number $ws3; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+4 workspace number $ws4; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+5 workspace number $ws5; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+6 workspace number $ws6; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+7 workspace number $ws7; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+8 workspace number $ws8; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+9 workspace number $ws9; exec "echo 1 > ${SOVPIPE}"
bindsym --no-repeat $mod+0 workspace number $ws10; exec "echo 1 > ${SOVPIPE}"

bindsym --release $mod+1 exec "echo 0 > ${SOVPIPE}"  
bindsym --release $mod+2 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+3 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+4 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+5 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+6 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+7 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+8 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+9 exec "echo 0 > ${SOVPIPE}"
bindsym --release $mod+0 exec "echo 0 > ${SOVPIPE}"

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload

# exit sway
bindsym $mod+Shift+e exec wlogout

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

bar {
	swaybar_command waybar
}

gaps inner 5
default_border pixel 3
smart_borders on

bindsym $mod+Shift+o exec swaylock --image $(find /home/khalid/Pictures/Wallpapers -name "*.*" | shuf --head-count 1)
exec blueman-applet
exec gnome-settings-daemon
exec swaync
bindsym $mod+Shift+n exec swaync-client -t -sw



bindsym $mod+p exec footclient --title="Python Shell" --app-id="foot Python Shell" -e python
bindsym $mod+x exec footclient --title="ranger" --app-id="foot ranger" -e ranger

input type:touchpad {
    click_method clickfinger
	drag enabled
	drag_lock disabled
	dwt enabled
	events disabled_on_external_mouse
	left_handed disabled
	middle_emulation enabled
	natural_scroll enabled
	scroll_method two_finger
	tap enabled
	tap_button_map lrm
}

input type:keyboard {
    xkb_capslock disabled
    xkb_numlock enabled
}

exec_always wl-paste -p -t text --watch clipman store -P --max-items=60
bindsym $mod+c exec clipman pick --tool="wofi" --max-items=30

bindsym $mod+minus move scratchpad
bindsym $mod+equal scratchpad show

exec_always kanshi
exec /usr/libexec/polkit-gnome-authentication-agent-1
exec syncthing --no-browser
exec ~/.local/bin/beeper --default-frame --hidden

exec_always autotiling
exec_always ~/.config/sway/clamshell.sh

# exec /opt/piavpn/bin/pia-client 

set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable

# Include configs from 3 locations:
#  - /usr/share/sway/config.d
#  - /etc/sway/config.d
#  - $XDG_CONFIG_HOME/sway/config.d ($HOME/.config/sway/config.d)
#
# If multiple directories contain the files with the same name, the later
# directory takes precedence; `$XDG_CONFIG_HOME/sway/config.d/20-swayidle.conf`
# will always be loaded instead of `/usr/share/sway/config.d/20-swayidle.conf`
# or `/etc/sway/config.d/20-swayidle.conf`
#
# This mechanism permits overriding our default configuration per-system
# (/etc) or per-user ($XDG_CONFIG_HOME) basis. Just create the file you
# want to modify/override in the higher-level directory.
#
# For example, to disable the default bar from Fedora configs, you'll need to
#     $ echo -n > "$HOME/.config/sway/config.d/90-bar.conf"
#
# Note the quoting, the $() and the arguments quoting. All the parts are equally
# important to make the magic work. And if you want to learn the secret behind
# the trick, it's all in the `wordexp(3)`.
#
include '$(/usr/libexec/sway/layered-include "/usr/share/sway/config.d/*.conf" "/etc/sway/config.d/*.conf" "${XDG_CONFIG_HOME:-$HOME/.config}/sway/config.d/*.conf")'
